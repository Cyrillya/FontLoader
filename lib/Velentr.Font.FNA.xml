<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Velentr.Font.FNA</name>
    </assembly>
    <members>
        <member name="T:Velentr.Font.Constants">
            <summary>
            Various constants defined for the font system.
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.DEFAULT_HIDEF_TEXTURE_SIZE">
            <summary>
            The default hidef texture size
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.DEFAULT_REACH_TEXTURE_SIZE">
            <summary>
            The default reach texture size
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.DEFAULT_CACHE_SURFACE_FORMAT">
            <summary>
            The default cache surface format
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.GlyphBitmapOrigin">
            <summary>
            The glyph bitmap origin
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants._defaultCharacterList">
            <summary>
            The default character list
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.DefaultCharacters">
            <summary>
            The default characters
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.DefaultLoadFlags">
            <summary>
            The default load flags
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.DefaultLoadTarget">
            <summary>
            The default load target
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.DefaultRenderMode">
            <summary>
            The default render mode
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.DefaultSpacesInTab">
            <summary>
            The default spaces in a tab
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.KerningSanityMultiplier">
            <summary>
            The kerning sanity multiplier
            </summary>
        </member>
        <member name="M:Velentr.Font.Constants.#cctor">
            <summary>
            Initializes the <see cref="T:Velentr.Font.Constants"/> class.
            </summary>
        </member>
        <member name="M:Velentr.Font.Constants.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Velentr.Font.Constants"/> class from being created.
            </summary>
        </member>
        <member name="P:Velentr.Font.Constants.Settings">
            <summary>
            Gets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:Velentr.Font.Constants.DefaultCharacterList">
            <summary>
            Gets or sets the default character list.
            </summary>
            <value>
            The default character list.
            </value>
        </member>
        <member name="P:Velentr.Font.Constants.StoreFontFileData">
            <summary>
            Whether to store the font's file data or not.
            Increases memory usage, but allows the program to not have to re-read the font file when generating the same font at different sizes.
            </summary>
            <value>
            The default character list.
            </value>
        </member>
        <member name="F:Velentr.Font.Constants.TWO_PI">
            <summary>
            A full arc of a circle
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants.MaxTextCacheSize">
            <summary>
            The maximum size of the TextCache object on a particular font
            </summary>
        </member>
        <member name="F:Velentr.Font.Constants._colorMapping">
            <summary>
                The color mapping.
            </summary>
        </member>
        <member name="P:Velentr.Font.Constants.ColorMapping">
             <summary>
                 Gets the color mapping.
             </summary>
            
             <value>
                 The color mapping.
             </value>
        </member>
        <member name="T:Velentr.Font.DrawStringExtension">
            <summary>
            Extensions to SpriteBatch.Draw to handle Velentr.Font
            </summary>
        </member>
        <member name="M:Velentr.Font.DrawStringExtension.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Font,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="font">The Font to use when rendering the string</param>
            <param name="text">The string to render</param>
            <param name="position">Position at which to render the string</param>
            <param name="color">Color with which to render the string</param>
        </member>
        <member name="M:Velentr.Font.DrawStringExtension.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Font,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="font">The font.</param>
            <param name="text">The text.</param>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="rotation">A rotation of this string.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this string.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this string.</param>
        </member>
        <member name="M:Velentr.Font.DrawStringExtension.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Font,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws text to the screen with the given font.
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="font">The Font to use when rendering the string</param>
            <param name="text">The string to render.</param>
            <param name="position">Position at which to render the string</param>
            <param name="color">Color with which to render the string</param>
        </member>
        <member name="M:Velentr.Font.DrawStringExtension.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Font,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="font">The font.</param>
            <param name="text">The text.</param>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="rotation">A rotation of this string.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this string.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this string.</param>
        </member>
        <member name="M:Velentr.Font.DrawStringExtension.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Text,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="text">The text to render.</param>
            <param name="position">Position at which to render the text</param>
            <param name="color">Color with which to render the text</param>
        </member>
        <member name="M:Velentr.Font.DrawStringExtension.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Text,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="text">The text to render.</param>
            <param name="position">Position at which to render the text</param>
            <param name="color">Color with which to render the text</param>
            <param name="rotation">A rotation of this string.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this string.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this string.</param>
        </member>
        <member name="T:Velentr.Font.DrawStringMarkdownExtensions">
            <summary>
            Extensions to SpriteBatch.Draw to handle Velentr.Font
            </summary>
        </member>
        <member name="M:Velentr.Font.DrawStringMarkdownExtensions.DrawStringWithMarkdown(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Font,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="font">The Font to use when rendering the string</param>
            <param name="text">The string to render</param>
            <param name="position">Position at which to render the string</param>
            <param name="color">Color with which to render the string</param>
        </member>
        <member name="M:Velentr.Font.DrawStringMarkdownExtensions.DrawStringWithMarkdown(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Font,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="font">The font.</param>
            <param name="text">The text.</param>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="rotation">A rotation of this string.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this string.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this string.</param>
        </member>
        <member name="M:Velentr.Font.DrawStringMarkdownExtensions.DrawStringWithMarkdown(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Font,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws text to the screen with the given font.
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="font">The Font to use when rendering the string</param>
            <param name="text">The string to render.</param>
            <param name="position">Position at which to render the string</param>
            <param name="color">Color with which to render the string</param>
        </member>
        <member name="M:Velentr.Font.DrawStringMarkdownExtensions.DrawStringWithMarkdown(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Font,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="font">The font.</param>
            <param name="text">The text.</param>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="rotation">A rotation of this string.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this string.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this string.</param>
        </member>
        <member name="M:Velentr.Font.DrawStringMarkdownExtensions.DrawStringWithMarkdown(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Text,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="text">The text to render.</param>
            <param name="position">Position at which to render the text</param>
            <param name="color">Color with which to render the text</param>
        </member>
        <member name="M:Velentr.Font.DrawStringMarkdownExtensions.DrawStringWithMarkdown(Microsoft.Xna.Framework.Graphics.SpriteBatch,Velentr.Font.Text,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Draw text to the screen with the given Font.
            </summary>
            <param name="spriteBatch">The spritebatch</param>
            <param name="text">The text to render.</param>
            <param name="position">Position at which to render the text</param>
            <param name="color">Color with which to render the text</param>
            <param name="rotation">A rotation of this string.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this string.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this string.</param>
        </member>
        <member name="F:Velentr.Font.Font._manager">
            <summary>
            The manager
            </summary>
        </member>
        <member name="F:Velentr.Font.Font._glyphCaches">
            <summary>
            Caches of glyphs
            </summary>
        </member>
        <member name="F:Velentr.Font.Font.CharacterGlyphs">
            <summary>
            The characters that we currently have generated glyphs for
            </summary>
        </member>
        <member name="F:Velentr.Font.Font.TextCache">
            <summary>
            The text cache
            </summary>
        </member>
        <member name="M:Velentr.Font.Font.#ctor(System.Int32,SharpFont.Face,System.String,Velentr.Font.FontManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Font"/> class.
            </summary>
            <param name="size">Size of the font.</param>
            <param name="face">The font face.</param>
            <param name="typefaceName">The typefaceName.</param>
            <param name="manager">The font manager.</param>
        </member>
        <member name="P:Velentr.Font.Font.Face">
            <summary>
            Gets the font face.
            </summary>
            <value>
            The face.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.FontFamily">
            <summary>
            Gets the size of the font.
            </summary>
            <value>
            The size of the font.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.GlyphHeight">
            <summary>
            Gets the height of glyphs in the Font.
            </summary>
            <value>
            The height of the glyph.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.Key">
            <summary>
            Gets the key representing the font.
            </summary>
            <value>
            The font's key.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.LoadFlags">
            <summary>
            Gets or sets the load flags.
            </summary>
            <value>
            The load flags.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.LoadTarget">
            <summary>
            Gets or sets the load target.
            </summary>
            <value>
            The load target.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.RenderMode">
            <summary>
            Gets or sets the render mode.
            </summary>
            <value>
            The render mode.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.Size">
            <summary>
            Gets the size of the Font.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.SpacesInTab">
            <summary>
            Gets or sets the number of spaces we'll use when a tab is requested.
            </summary>
            <value>
            The spaces in tab.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.Typeface">
            <summary>
            Gets the typeface the font is associated with.
            </summary>
            <value>
            The typeface.
            </value>
        </member>
        <member name="P:Velentr.Font.Font.TypefaceName">
            <summary>
            Gets the name of the typeface the font is associated with.
            </summary>
            <value>
            The typeface name.
            </value>
        </member>
        <member name="M:Velentr.Font.Font.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Velentr.Font.Font.DisposeFinal">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Velentr.Font.Font.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Rectangle,System.Boolean)">
            <summary>
            Draws the text to the screen at the specified position and with the specified color.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="text">The text.</param>
            <param name="color">The color.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="applyMarkdown">Whether to apply markdown commands or not. Defaults to false. If set to true, Color will be the default color.</param>
        </member>
        <member name="M:Velentr.Font.Font.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Rectangle,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single,System.Boolean)">
            <summary>
            Draws the text to the screen at the specified position and with the specified color.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="text">The text.</param>
            <param name="color">The color.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="rotation">The rotation.</param>
            <param name="origin">The origin.</param>
            <param name="scale">The scale.</param>
            <param name="effects">The effects.</param>
            <param name="layerDepth">The layer depth.</param>
            <param name="applyMarkdown">Whether to apply markdown commands or not. Defaults to false. If set to true, Color will be the default color.</param>
        </member>
        <member name="M:Velentr.Font.Font.MakeText(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Pre-generates a list of Glyphs to draw to the string.
            </summary>
            <param name="text">The text.</param>
            <param name="applyMarkdown">Whether to apply markdown commands or not. Defaults to false. If set to true, Color will be the default color.</param>
            <returns>A Text object representing the Glyphs we need to draw to the screen for the input string.</returns>
        </member>
        <member name="M:Velentr.Font.Font.MakeText(System.String,System.Boolean)">
            <summary>
            Pre-generates a list of Glyphs to draw to the string.
            </summary>
            <param name="text">The text.</param>
            <param name="applyMarkdown">Whether to apply markdown commands or not. Defaults to false. If set to true, Color will be the default color.</param>
            <returns>A Text object representing the Glyphs we need to draw to the screen for the input string.</returns>
        </member>
        <member name="M:Velentr.Font.Font.MeasureText(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <returns>The size of the text.</returns>
        </member>
        <member name="M:Velentr.Font.Font.MeasureText(System.String,System.Boolean)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <returns>The size of the text.</returns>
        </member>
        <member name="M:Velentr.Font.Font.Equals(Velentr.Font.Font)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Velentr.Font.Font.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Velentr.Font.Font.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Velentr.Font.Font.ResizeTextCache(System.Int32)">
            <summary>
            Resizes the text cache.
            </summary>
            <param name="newCacheSize">New size of the cache.</param>
        </member>
        <member name="M:Velentr.Font.Font.ToString">
            <summary>
            Converts the Font to a string to provide debug information on the font.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Velentr.Font.Font.op_Equality(Velentr.Font.Font,Velentr.Font.Font)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Velentr.Font.Font.op_Inequality(Velentr.Font.Font,Velentr.Font.Font)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Velentr.Font.Font.PreGenerateCharacterGlyphs(System.Char[])">
            <summary>
            Pres the generate character glyphs.
            </summary>
            <param name="characters">The characters.</param>
        </member>
        <member name="M:Velentr.Font.Font.GetKerning(Velentr.Font.Internal.Glyph,Velentr.Font.Internal.Glyph)">
            <summary>
            Gets the kerning between two characters.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The kerning between the characters.</returns>
        </member>
        <member name="M:Velentr.Font.Font.GenerateGlyph(System.Char)">
            <summary>
            Generates the glyph.
            </summary>
            <param name="character">The character.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Could not generate character [{character}]!</exception>
        </member>
        <member name="M:Velentr.Font.Font.TryGetGlyph(System.Char,Velentr.Font.Internal.Glyph@)">
            <summary>
            Tries the get glyph.
            </summary>
            <param name="character">The character.</param>
            <param name="glyph">The glyph.</param>
            <returns></returns>
        </member>
        <member name="M:Velentr.Font.Font.ApplyMarkdownCommands(System.String,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Applies the markdown commands.
            </summary>
            <param name="text">The text.</param>
            <param name="defaultColor">The default color.</param>
            <param name="currentIndex">Index of the current.</param>
            <returns>(new index, new text color)</returns>
            <exception cref="T:System.Exception">
            Invalid markdown exception!
            </exception>
        </member>
        <member name="T:Velentr.Font.FontManager">
            <summary>
            
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Velentr.Font.FontManager._libraries">
            <summary>
            The libraries
            </summary>
        </member>
        <member name="F:Velentr.Font.FontManager.typefaces">
            <summary>
            The fonts we have cached.
            </summary>
        </member>
        <member name="M:Velentr.Font.FontManager.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Initializes the <see cref="T:Velentr.Font.FontManager"/> class.
            </summary>
        </member>
        <member name="M:Velentr.Font.FontManager.GetLibrary">
            <summary>
            Gets the library.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Velentr.Font.FontManager.ReturnLibrary(SharpFont.Library)">
            <summary>
            Returns the library.
            </summary>
            <param name="library">The library.</param>
        </member>
        <member name="P:Velentr.Font.FontManager.GraphicsDevice">
            <summary>
            Gets the graphics device.
            </summary>
            <value>
            The graphics device.
            </value>
        </member>
        <member name="M:Velentr.Font.FontManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Velentr.Font.FontManager.GetFont(System.String,System.Int32,System.Boolean,System.Char[],System.Nullable{System.Boolean})">
            <summary>
            Gets the font.
            </summary>
            <param name="path">The path.</param>
            <param name="size">The size.</param>
            <param name="preGenerateCharacters">if set to <c>true</c> [pre generate characters].</param>
            <param name="charactersToPregenerate">The characters to pregenerate.</param>
            <param name="storeTypefaceFileData">The store typeface file data.</param>
            <returns></returns>
        </member>
        <member name="M:Velentr.Font.FontManager.GetFont(System.String,System.IO.Stream,System.Int32,System.Boolean,System.Char[])">
            <summary>
            Gets the font.
            </summary>
            <param name="name">The name.</param>
            <param name="fileStream">The file stream.</param>
            <param name="size">The size.</param>
            <param name="preGenerateCharacters">if set to <c>true</c> [pre generate characters].</param>
            <param name="charactersToPregenerate">The characters to pregenerate.</param>
            <returns></returns>
        </member>
        <member name="M:Velentr.Font.FontManager.GetFont(System.String,System.Byte[],System.Int32,System.Boolean,System.Char[])">
            <summary>
            Gets the font.
            </summary>
            <param name="name">The name.</param>
            <param name="fileData">The file data.</param>
            <param name="size">The size.</param>
            <param name="preGenerateCharacters">if set to <c>true</c> [pre generate characters].</param>
            <param name="charactersToPregenerate">The characters to pregenerate.</param>
            <returns></returns>
        </member>
        <member name="M:Velentr.Font.FontManager.GetTypeface(System.String,System.Boolean,System.Char[],System.Nullable{System.Boolean})">
            <summary>
            Gets or loads the specified font with the specified size.
            </summary>
            <param name="path">The path to load the font from.</param>
            <param name="preGenerateCharacters">if set to <c>true</c> [pre generate characters].</param>
            <param name="charactersToPregenerate">The characters to pregenerate.</param>
            <param name="storeTypefaceFileData">Whether to store typeface file data.</param>
            <returns>The Font that matches the specified parameters.</returns>
            <exception cref="T:System.Exception">GraphicsDevice is not initialized! Please either initialize VelentrFont.Core or provide the GraphicsDevice when getting a new font.</exception>
        </member>
        <member name="M:Velentr.Font.FontManager.GetTypeface(System.String,System.IO.Stream,System.Boolean,System.Char[])">
            <summary>
            Gets or loads the specified font with the specified size.
            </summary>
            <param name="name">The name.</param>
            <param name="fileStream">The file stream.</param>
            <param name="preGenerateCharacters">if set to <c>true</c> [pre generate characters].</param>
            <param name="charactersToPregenerate">The characters to pregenerate.</param>
            <returns>The Font that matches the specified parameters.</returns>
        </member>
        <member name="M:Velentr.Font.FontManager.GetTypeface(System.String,System.Byte[],System.Boolean,System.Char[])">
            <summary>
            Gets or loads the specified font with the specified size.
            </summary>
            <param name="name">The name.</param>
            <param name="fileData">The file data.</param>
            <param name="preGenerateCharacters">if set to <c>true</c> [pre generate characters].</param>
            <param name="charactersToPregenerate">The characters to pregenerate.</param>
            <returns>The Font that matches the specified parameters.</returns>
        </member>
        <member name="M:Velentr.Font.FontManager.GetTypefaceInternal(System.String,System.Byte[],System.Boolean,System.Char[],System.Nullable{System.Boolean})">
            <summary>
            Gets the typeface internal.
            </summary>
            <param name="name">The name.</param>
            <param name="fileData">The file data.</param>
            <param name="preGenerateCharacters">if set to <c>true</c> [pre generate characters].</param>
            <param name="charactersToPregenerate">The characters to pregenerate.</param>
            <param name="storeTypefaceFileData">The store typeface file data.</param>
            <returns></returns>
            <exception cref="T:System.Exception">GraphicsDevice is not initialized! Please either initialize VelentrFont.Core or provide the GraphicsDevice when getting a new font.</exception>
        </member>
        <member name="M:Velentr.Font.FontManager.GetStoredTypeface(System.String)">
            <summary>
            Gets the stored typeface.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Velentr.Font.FontManager.RemoveTypeface(System.String,System.Boolean)">
            <summary>
            Removes a font from the system.
            </summary>
            <param name="key">The key for the font we want to remove.</param>
        </member>
        <member name="F:Velentr.Font.Internal.Cache`2.objects">
            <summary>
            The cached objects
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Cache`2.queue">
            <summary>
            The queue
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Cache`2.maxCacheSize">
            <summary>
            The maximum cache size
            </summary>
        </member>
        <member name="P:Velentr.Font.Internal.Cache`2.MaxCacheSize">
            <summary>
            Gets or sets the maximum size of the cache.
            </summary>
            <value>
            The maximum size of the cache.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">Max Cache Size must be 0 or greater!</exception>
        </member>
        <member name="M:Velentr.Font.Internal.Cache`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Internal.Cache`2"/> class.
            </summary>
            <param name="maxCacheSize">Maximum size of the cache.</param>
        </member>
        <member name="M:Velentr.Font.Internal.Cache`2.TryGetItem(`0,`1@)">
            <summary>
            Gets the cache item if it exists.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value to return.</param>
            <returns>Whether we were able to retrieve the value or not</returns>
        </member>
        <member name="M:Velentr.Font.Internal.Cache`2.AddItemToCache(`0,`1,System.Boolean)">
            <summary>
            Adds the item to cache.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="overrideWhenKeyExists">if set to <c>true</c> [override when key exists].</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Key already exists in cache!</exception>
        </member>
        <member name="M:Velentr.Font.Internal.Cache`2.ResizeCache(System.Int32)">
            <summary>
            Resizes the cache.
            </summary>
            <param name="maxSize">The maximum size.</param>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.AdvanceX">
            <summary>
            The X Advance of the character.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.AdvanceY">
            <summary>
            The Y Advance of the character.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.BearingX">
            <summary>
            The X bearing of the character.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.BearingY">
            <summary>
            The Y bearing of the character.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.Boundary">
            <summary>
            The position and boundaries of the Character on the GlyphCache's Texture.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.Character">
            <summary>
            The Character.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.Index">
            <summary>
            The index of the Character.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.Kerning">
            <summary>
            Kerning for the character.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.Glyph.GlyphCache">
            <summary>
            The GlyphCache that the character is associated with.
            </summary>
        </member>
        <member name="M:Velentr.Font.Internal.Glyph.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Rectangle,System.Char,System.Int32,Velentr.Font.Internal.GlyphCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Internal.Glyph"/> class.
            </summary>
            <param name="advanceX">The advance x.</param>
            <param name="advanceY">The advance y.</param>
            <param name="bearingX">The bearing x.</param>
            <param name="bearingY">The bearing y.</param>
            <param name="boundary">The boundary.</param>
            <param name="character">The character.</param>
            <param name="index">The index.</param>
            <param name="glyphCache">The glyph cache.</param>
        </member>
        <member name="P:Velentr.Font.Internal.Glyph.BearingWithWidth">
            <summary>
            The Bearing of the Character with the Width added.
            </summary>
        </member>
        <member name="M:Velentr.Font.Internal.Glyph.ToString">
            <summary>
            Converts the character to a string for debug purposes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Velentr.Font.Internal.GlyphCache">
            <summary>
            A cache of Glyphs.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache.Width">
            <summary>
            The width of the GlyphCache.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache.Height">
            <summary>
            The height of the GlyphCache.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache._buffer">
            <summary>
            The buffer.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache._font">
            <summary>
            The font the GlyphCache is associated with.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache._characters">
            <summary>
            The characters that are part of this GlyphCache.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache._currentX">
            <summary>
            The current x position in the GlyphCache.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache._currentY">
            <summary>
            The current y position in the GlyphCache.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache._manager">
            <summary>
            The manager
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache.Full">
            <summary>
            Whether the Cache is full (true) or not (false).
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.GlyphCache.Texture">
            <summary>
            The texture the characters are cached on.
            </summary>
        </member>
        <member name="M:Velentr.Font.Internal.GlyphCache.#ctor(Velentr.Font.Font,Velentr.Font.FontManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Internal.GlyphCache"/> class.
            </summary>
            <param name="font">The font.</param>
            <param name="manager">The font manager.</param>
        </member>
        <member name="M:Velentr.Font.Internal.GlyphCache.AddCharacterToCache(System.Char,Velentr.Font.Internal.Glyph@)">
            <summary>
            Adds the character to cache.
            </summary>
            <param name="character">The character.</param>
            <param name="glyph">The cached glyph.</param>
            <returns>Whether we could add the character to the cache or not.</returns>
        </member>
        <member name="M:Velentr.Font.Internal.GlyphCache.AddGlyph(System.Char,SharpFont.Glyph,SharpFont.BitmapGlyph)">
            <summary>
            Adds the character.
            </summary>
            <param name="character">The character.</param>
            <param name="glyph">The glyph.</param>
            <param name="bitmapGlyph">The bitmap glyph.</param>
            <returns>The character that we added to the cache.</returns>
        </member>
        <member name="T:Velentr.Font.Internal.Helpers">
            <summary>
            Various helpers for use with the Font System.
            </summary>
        </member>
        <member name="M:Velentr.Font.Internal.Helpers.ConvertFloatToInt(System.Single)">
            <summary>
            Converts a float to an int.
            </summary>
            <param name="value">The value.</param>
            <returns>The int representing the float value.</returns>
        </member>
        <member name="M:Velentr.Font.Internal.Helpers.Convert1DArrayTo2DArray``1(``0[],System.Int32,System.Int32)">
            <summary>
            Converts the 1D array to a 2D array.
            </summary>
            <typeparam name="T">The type of the array.</typeparam>
            <param name="baseArray">The base 1D array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The 2D array.</returns>
        </member>
        <member name="M:Velentr.Font.Internal.Helpers.Convert2DArrayTo1DArray``1(``0[0:,0:],System.Int32,System.Int32)">
            <summary>
            Converts the 2D array to a 1D array.
            </summary>
            <typeparam name="T">The type of the array.</typeparam>
            <param name="baseArray">The base array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The 1D array.</returns>
        </member>
        <member name="M:Velentr.Font.Internal.Helpers.FloatsAreEqual(System.Single,System.Single,System.Single)">
            <summary>
            Checks whether two floats are approximately equivalent
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <param name="maxDifference">The maximum difference.</param>
            <returns>Whether the floats are equivalent</returns>
        </member>
        <member name="M:Velentr.Font.Internal.Helpers.ReadStream(System.IO.Stream)">
            <summary>
            Reads the a filestream and returns it as a byte array.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The filestream as a byte array</returns>
        </member>
        <member name="T:Velentr.Font.Internal.TextCharacter">
            <summary>
            A Character in the Text object.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.TextCharacter.Character">
            <summary>
            The character.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.TextCharacter.Position">
            <summary>
            The position of the character in the Text object.
            </summary>
        </member>
        <member name="F:Velentr.Font.Internal.TextCharacter.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:Velentr.Font.Internal.TextCharacter.#ctor(Velentr.Font.Internal.Glyph,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Internal.TextCharacter"/> class.
            </summary>
            <param name="character">The character.</param>
            <param name="position">The position.</param>
            <param name="color">The color. Defaults to null.</param>
        </member>
        <member name="T:Velentr.Font.Internal.TextImplementation">
            <summary>
            The implementation of the Text object.
            </summary>
            <seealso cref="T:Velentr.Font.Text" />
        </member>
        <member name="M:Velentr.Font.Internal.TextImplementation.#ctor(System.String,Velentr.Font.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Internal.TextImplementation"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
        </member>
        <member name="M:Velentr.Font.Internal.TextImplementation.#ctor(Velentr.Font.Text)">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Internal.TextImplementation"/> class.
            </summary>
            <param name="text">The old text object to copy.</param>
        </member>
        <member name="T:Velentr.Font.Text">
            <summary>
            A pre-generated list of characters that can be rendered
            </summary>
        </member>
        <member name="F:Velentr.Font.Text.Characters">
            <summary>
            The characters that are used by this Text object
            </summary>
        </member>
        <member name="F:Velentr.Font.Text.Font">
            <summary>
            The font that is used by this Text object
            </summary>
        </member>
        <member name="P:Velentr.Font.Text.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Velentr.Font.Text.WidthInt">
            <summary>
            Gets the width as an int.
            </summary>
            <value>
            The width int.
            </value>
        </member>
        <member name="P:Velentr.Font.Text.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Velentr.Font.Text.HeightInt">
            <summary>
            Gets the height as an int.
            </summary>
            <value>
            The height int.
            </value>
        </member>
        <member name="P:Velentr.Font.Text.String">
            <summary>
            Gets the string that will be printed by this Text object.
            </summary>
            <value>
            The string.
            </value>
        </member>
        <member name="P:Velentr.Font.Text.Size">
            <summary>
            Gets the size of the object.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="F:Velentr.Font.Text._calculationCache">
            <summary>
                The calculation cache.
            </summary>
        </member>
        <member name="M:Velentr.Font.Text.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Text"/> class.
            </summary>
        </member>
        <member name="M:Velentr.Font.Text.#ctor(Velentr.Font.Text)">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Text"/> class.
            </summary>
            <param name="oldObject">The old object.</param>
        </member>
        <member name="P:Velentr.Font.Text.MaxCalculationCacheSize">
             <summary>
                 Gets or sets the maximum size of the calculation cache.
             </summary>
            
             <value>
                 The maximum size of the calculation cache.
             </value>
        </member>
        <member name="M:Velentr.Font.Text.AddCharacter(Velentr.Font.Internal.TextCharacter)">
            <summary>
            Adds a character to the Text object.
            </summary>
            <param name="character">The character to add.</param>
        </member>
        <member name="M:Velentr.Font.Text.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            Draws the text to the string.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="position">The position to draw the text at.</param>
            <param name="color">The color to draw the text with.</param>
            <param name="color">The color to draw the text with.</param>
            <param name="applyMarkdown">Whether to apply markdown commands or not. Defaults to false. If set to true, Color will be the default color.</param>
        </member>
        <member name="M:Velentr.Font.Text.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single,System.Boolean)">
            <summary>
            Draws the text to the string.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="position">The position to draw the text at.</param>
            <param name="color">The color to draw the text with.</param>
            <param name="rotation">A rotation of this string.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this string.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this string.</param>
            <param name="applyMarkdown">Whether to apply markdown commands or not. Defaults to false. If set to true, Color will be the default color.</param>
        </member>
        <member name="T:Velentr.Font.Typeface">
            <summary>
            A Font that can be used to draw text to the screen
            </summary>
            <seealso cref="T:System.IEquatable`1" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Velentr.Font.Typeface._manager">
            <summary>
            The manager
            </summary>
        </member>
        <member name="F:Velentr.Font.Typeface.Fonts">
            <summary>
            The fonts
            </summary>
        </member>
        <member name="M:Velentr.Font.Typeface.#ctor(System.String,System.Byte[],System.Boolean,System.Char[],System.Boolean,Velentr.Font.FontManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Velentr.Font.Typeface"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="typefaceData">The typeface data.</param>
            <param name="preGenerateCharacters">if set to <c>true</c> [pre generate characters].</param>
            <param name="charactersToPreGenerate">The characters to pre generate.</param>
            <param name="storeTypefaceFileData">if set to <c>true</c> [store typeface file data].</param>
            <param name="manager">The font manager.</param>
        </member>
        <member name="P:Velentr.Font.Typeface.Name">
            <summary>
            Gets the name of the typeface.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Velentr.Font.Typeface.TypefaceData">
            <summary>
            Gets the typeface data.
            </summary>
            <value>
            The typeface data.
            </value>
        </member>
        <member name="P:Velentr.Font.Typeface.PreGenerateCharacters">
            <summary>
            Gets or sets a value indicating whether [pre generate characters].
            </summary>
            <value>
              <c>true</c> if [pre generate characters]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Velentr.Font.Typeface.CharactersToPreGenerate">
            <summary>
            Gets or sets the characters to pre generate.
            </summary>
            <value>
            The characters to pre generate.
            </value>
        </member>
        <member name="M:Velentr.Font.Typeface.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Velentr.Font.Typeface.DisposeFinal">
            <summary>
            Disposes the final.
            </summary>
        </member>
        <member name="M:Velentr.Font.Typeface.Equals(Velentr.Font.Typeface)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Velentr.Font.Typeface.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Velentr.Font.Typeface.GetFont(System.Int32,System.Nullable{System.Boolean},System.Char[])">
            <summary>
            Gets the font.
            </summary>
            <param name="size">The size.</param>
            <param name="preGenerateCharacters">The pre generate characters.</param>
            <param name="charactersToPreGenerate">The characters to pre generate.</param>
            <returns>The requested font</returns>
        </member>
        <member name="M:Velentr.Font.Typeface.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Velentr.Font.Typeface.RemoveFont(System.Int32)">
            <summary>
            Removes the font.
            </summary>
            <param name="size">The size.</param>
        </member>
    </members>
</doc>
